{"version":3,"file":"static/js/375.ac0d59d9.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/PhoneBook/PhoneBook.module.css?b449","components/PhoneBook/PhoneBook.jsx"],"sourcesContent":["export const getFilter = state => state.contacts.contacts;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getContacts = state => state.contacts.contacts;\nexport const getIsRefreshing = state => state.contacts.isRefreshing;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"nameForm\":\"ContactForm_nameForm__7jLzJ\"};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { addContact } from '../../redux/contacts/contactOperations';\nimport { getContacts } from '../../redux/contacts/contactsSelectors';\n\nimport css from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  \n  const handleChange = evt => {\n    if (evt.target.name === 'name') {\n      setName(evt.target.value);\n    }\n    if (evt.target.name === 'number') {\n      setNumber(evt.target.value);\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (\n      contacts.find(\n        contact => contact.name.toLocaleLowerCase() === name.toLocaleLowerCase()\n      )\n    ) {\n      reset();\n      return toast.warning(`${name} Alredy have`);\n    }\n\n    if (name && number) {\n      dispatch(addContact({ name: name, number: number }));\n      reset();\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <label className={css.label}>\n        <span className={css.nameForm}>Name</span>        \n        <input\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder={'Enter name'}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces.\n         For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.label}>\n        Number\n        <input\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          placeholder={'Enter number'}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes,\n         parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n      <ToastContainer autoClose={2000} />\n    </form>\n  );\n}","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactItem_item__gxreB\",\"btnDelete\":\"ContactItem_btnDelete__edqzG\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport css from './ContactItem.module.css';\nimport {\n  editContact,\n  deleteContact,\n} from '../../redux/contacts/contactOperations';\nimport { getContacts } from '../../redux/contacts/contactsSelectors';\n\nconst ContactItem = ({ id, name, number }) => {\n  const [changeName] = useState(name);\n  const [changeNumber] = useState(number);\n  const [changeContact, setChangeContact] = useState(false);\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handelChengeContact = () => {\n    if (changeContact) {\n      if (name === changeName && number === changeNumber) {\n        setChangeContact(!changeContact);\n        return;\n      }\n      if (\n        contacts.find(\n          contact =>\n            contact.name.toLocaleLowerCase() ===\n              changeName.toLocaleLowerCase() && contact.id !== id\n        )\n      ) {\n        toast.warning(`${changeName} Alredy have`);\n        return;\n      }\n      dispatch(\n        editContact({\n          id,\n          name: changeName,\n          number: changeNumber,\n        })\n      );\n    }\n    setChangeContact(!changeContact);\n  };\n  return (\n    <li className={css.item} id={id}>\n      <div className={css.valueWrap}>\n        <span className={css.name}>{name}: </span>\n        <span>{number}</span>\n      </div>\n\n      <button\n        className={css.btnDelete}\n        onClick={() => dispatch(deleteContact(id))}\n        onChange={handelChengeContact}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import ContactItem from '../ContactItem/ContactItem';\nimport css from './ContactList.module.css';\n\nconst ContactList = ({ contacts }) => {\n  return (\n    <ul className={css.list}>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItem\n          key={id}\n          id={id}\n          data={contacts}\n          name={name}\n          number={number}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\"};","import css from './Filter.module.css';\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <label className={css.label}>\n      Filter\n      <input type=\"text\" name=\"filter\" value={filter} onChange={onChange} />\n    </label>\n  );\n};\n\nexport default Filter;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PhoneBook_container__qH1yN\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport { fetchContacts } from '../../redux/contacts/contactOperations';\nimport { changeFilter } from '../../redux/contacts/contactSlice';\nimport css from './PhoneBook.module.css';\n\nexport default function PhoneBook() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts);\n  const filter = useSelector(state => state.contacts.filter);\n\n  const setFilter = value => {\n    dispatch(changeFilter(value));\n  };\n\n  const handleFilterInput = e => {\n    setFilter(e.target.value);\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const isVisibleContacts = () => {\n    if (contacts.length !== 0 && typeof contacts !== 'string') {\n      return contacts.filter(({ name }) =>\n        name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n    return [];\n  };\n\n  return (\n    <div className={css.container}>\n      <h1 className={css.title}>Phonebook</h1>\n      <div className={css.wrap}>\n        <ContactForm />\n      </div>\n      <h2 className={css.titleSection}>Contacts</h2>\n\n      <Filter filter={filter} onChange={handleFilterInput} />\n      <ContactList contacts={isVisibleContacts()} />\n    </div>\n  );\n}"],"names":["getContacts","state","contacts","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","evt","target","value","reset","onSubmit","preventDefault","find","contact","toLocaleLowerCase","toast","addContact","className","css","onChange","type","placeholder","pattern","title","required","autoClose","id","changeName","changeNumber","changeContact","setChangeContact","onClick","deleteContact","editContact","map","data","filter","PhoneBook","useEffect","fetchContacts","e","changeFilter","length","toLowerCase","includes"],"sourceRoot":""}